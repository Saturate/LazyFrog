/**
 * Script to launch browser with extension loaded and navigate to a game
 * Keeps browser open for inspection with DevTools
 */

import puppeteer from 'puppeteer';
import path from 'path';

const EXTENSION_PATH = path.join(__dirname, '../dist');
const GAME_URL = 'https://www.reddit.com/r/SwordAndSupperGame/';

async function inspectGame() {
  console.log('üöÄ Launching browser with extension...');
  console.log('üì¶ Extension path:', EXTENSION_PATH);

  // Launch browser with extension loaded
  const browser = await puppeteer.launch({
    headless: false,
    devtools: true, // Auto-open DevTools
    args: [
      `--disable-extensions-except=${EXTENSION_PATH}`,
      `--load-extension=${EXTENSION_PATH}`,
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      '--window-size=1920,1080',
    ],
  });

  const pages = await browser.pages();
  const page = pages[0];

  console.log('üìç Navigating to Sword & Supper subreddit...');
  await page.goto(GAME_URL, { waitUntil: 'networkidle2' });

  console.log('‚úÖ Page loaded!');
  console.log('\nüéØ Instructions:');
  console.log('1. Click on any level post to open the game');
  console.log('2. The game will load in an iframe (*.devvit.net)');
  console.log('3. Use DevTools to inspect the iframe contents');
  console.log('4. Look for the console messages from our game.js script');
  console.log('5. Try using window.ssBot in the console to interact with the game');
  console.log('\nüí° Console commands available in game iframe:');
  console.log('   window.ssBot.analyze() - Re-analyze the game page');
  console.log('   window.ssBot.getState() - Get current game state');
  console.log('   window.ssBot.clickButton("text") - Click a button by text');
  console.log('   window.ssBot.injectControls() - Inject React control panel');
  console.log('   window.ssBot.getClickable() - Get all clickable elements');
  console.log('\n‚è∏Ô∏è  Browser will stay open. Press Ctrl+C to close.');

  // Listen for console messages from all frames
  page.on('console', async (msg) => {
    const text = msg.text();
    if (text.includes('üéÆ') || text.includes('ssBot')) {
      console.log(`[GAME] ${text}`);
    }
  });

  // Keep process alive
  await new Promise(() => {});
}

inspectGame().catch((error) => {
  console.error('‚ùå Error:', error);
  process.exit(1);
});
